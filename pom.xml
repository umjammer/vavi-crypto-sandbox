<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>vavi</groupId>
  <artifactId>vavi-crypto-sandbox</artifactId>
  <version>1.0.2</version>

  <name>Vavi Crypto API</name>
  <organization>
    <name>vavi</name>
  </organization>
  <url>https://github.com/umjammer/vavi-crypto-sandbox</url>
  <description>Crypto API</description>
  <scm>
    <url>https://github.com/umjammer/vavi-crypto-sandbox</url>
  </scm>
  <issueManagement>
    <url>https://github.com/umjammer/vavi-crypto-sandbox/issues</url>
  </issueManagement>

  <properties>
    <rococoa.version>0.8.5</rococoa.version>
  </properties>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/umjammer/vavi-crypto-sandbox</url>
    </repository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>1.0-alpha-11</version>
            <extensions>true</extensions>
            <configuration>
              <javahClassNames>
                <javahClassName>com.boyter.mscrypto.MSCryptoManager</javahClassName>
              </javahClassNames>
              <javahSearchJNIFromDependencies>false</javahSearchJNIFromDependencies>
              <javahOS>darwin</javahOS>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerStartOptions>
                <compilerStartOption>-g -Wall -O2 -fomit-frame-pointer -fPIC</compilerStartOption>
                <compilerStartOption>
                  -I/usr/local/include
                </compilerStartOption>
              </compilerStartOptions>
              <sources>
                <source>
                  <directory>src/main/native/</directory>
                  <fileNames>
                    <fileName>mscrypt.c</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerStartOptions>
                <linkerStartOption>-dynamiclib -arch x86_64
                  -L/usr/local/lib
                </linkerStartOption>
              </linkerStartOptions>
              <linkerFinalName/>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.directory}/mscrypto.dll</linkerEndOption>
              </linkerEndOptions>
            </configuration>
            <executions>
              <execution>
                <id>javah</id>
                <phase>compile</phase>
                <goals>
                  <goal>javah</goal>
                  <goal>compile</goal>
                  <goal>link</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>utf-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>instrumentation</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <jar jarfile="${project.build.directory}/gi.jar"
                     manifest="src/test/instrumentation/manifest.mf">
                  <fileset dir="${project.build.testOutputDirectory}">
                    <include name="instr/*.class" />
                    <include name="Generic*.properties" />
                    <include name="Properties*.properties" />
                  </fileset>
                  <zipfileset src="${org.javassist:javassist:jar}"
                              excludes="META-INF/**"/>
                </jar>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>keychain</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <jar jarfile="${project.build.directory}/keychain-provider.jar">
                  <fileset dir="${project.build.outputDirectory}">
                    <include name="vavix/rococoa/foundation/*.class" />
                    <include name="vavix/rococoa/keychain/*.class" />
                  </fileset>
                  <fileset dir="${project.build.testOutputDirectory}">
                    <include name="vavix/rococoa/keychain/Key*.class" />
                  </fileset>
                </jar>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>camellia</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <jar jarfile="${project.build.directory}/camellia-provider.jar">
                  <fileset dir="${project.build.outputDirectory}">
                    <include name="vavi/cripto/camellia/*.class" />
                  </fileset>
                  <fileset dir="${project.build.testOutputDirectory}">
                    <include name="camellia.policy" />
                  </fileset>
                </jar>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.rococoa</groupId>
                  <artifactId>rococoa-core</artifactId>
                  <type>dylib</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                  <destFileName>librococoa.dylib</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

<!--
    how do those work???
            -cp ${project.build.directory}/camellia-provider.jar
            -Djava.security.policy=${project.build.testOutputDirectory}/camellia.policy
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <argLine>
            -javaagent:${project.build.directory}/gi.jar
            -Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
          </argLine>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/umjammer/*</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons</artifactId>
      <version>1.1.8</version>
    </dependency>

    <dependency>
      <groupId>org.rococoa</groupId>
      <artifactId>rococoa-contrib</artifactId>
      <version>${rococoa.version}</version>
    </dependency>
    <dependency>
      <groupId>org.rococoa</groupId>
      <artifactId>rococoa-core</artifactId>
      <version>${rococoa.version}</version>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <version>5.12.1</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.23.1-GA</version> <!-- 3.24.0-GA ~ for java11 -->
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
